name: build
on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - GOOS: linux
            GOARCH: amd64
          - GOOS: linux
            GOARCH: arm64
          - GOOS: linux
            GOARCH: loong64
            ENV: GOMIPS=softfloat
          - GOOS: linux
            GOARCH: mips64
            ENV: GOMIPS=softfloat
          - GOOS: linux
            GOARCH: mips64le
            ENV: GOMIPS=softfloat
          - GOOS: linux
            GOARCH: ppc64
          - GOOS: linux
            GOARCH: ppc64le
          - GOOS: linux
            GOARCH: riscv64
          - GOOS: windows
            GOARCH: amd64
            ext: .exe
          - GOOS: windows
            GOARCH: arm64
            ext: .exe
          - GOOS: darwin
            GOARCH: amd64
          - GOOS: darwin
            GOARCH: arm64
          - GOOS: freebsd
            GOARCH: amd64
          - GOOS: freebsd
            GOARCH: arm64
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          check-latest: true

      - name: Prepare Build Environment
        run: mkdir -p dist

      - name: Build Binary
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          APP_NAME: ESurfing-go
          EXT: ${{ matrix.ext || '' }}
        run: |
          if [ -n "${{ matrix.ENV }}" ]; then
            export ${{ matrix.ENV }}
          fi
          OUTPUT="dist/${APP_NAME}_${GOOS}_${GOARCH}${EXT}"
          go build -trimpath -ldflags="-s -w" -o "$OUTPUT" ./cmd/main/...

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_${{ matrix.GOOS }}_${{ matrix.GOARCH }}${{ matrix.ext || '' }}
          path: dist/

  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Generate Checksums
        run: |
          cd dist
          sha256sum * > SHA256SUMS.txt

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}